syntax = "proto3";
package cosmos.vesting.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/auth/vesting/types";

// Msg defines the bank Msg service.
service Msg {
  // CreateVestingAccount defines a method that enables creating a vesting
  // account.
  rpc CreateVestingAccount(MsgCreateVestingAccount) returns (MsgCreateVestingAccountResponse);
}

// MsgCreateVestingAccount defines a message that enables creating a vesting
// account.
message MsgCreateVestingAccount {
  option (gogoproto.equal) = true;

  string   from_address                    = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string   to_address                      = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  repeated cosmos.base.v1beta1.Coin amount = 3
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  int64 end_time = 4 [(gogoproto.moretags) = "yaml:\"end_time\""];

  VestingAccountType vesting_account_type = 5 [(gogoproto.moretags) = "yaml:\"vesting_account_type\""];
}

enum VestingAccountType {
  DELAYED_VESTING_ACCOUNT_TYPE = 0;
  CONTINUOUS_VESTING_ACCOUNT_TYPE = 1;
  PERMANENT_LOCKED_VESTING_ACCOUNT_TYPE = 2;
}

// MsgCreateVestingAccountResponse defines the Msg/CreateVestingAccount response type.
message MsgCreateVestingAccountResponse {}

